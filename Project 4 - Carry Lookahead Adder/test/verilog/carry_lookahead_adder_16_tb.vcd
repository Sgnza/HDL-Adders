$date
	Sun Jan 14 23:05:47 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module carry_lookahead_adder_16_tb $end
$var wire 16 ! sum_tb [15:0] $end
$var wire 1 " cout_tb $end
$var reg 16 # a_tb [15:0] $end
$var reg 16 $ b_tb [15:0] $end
$var reg 1 % cin_tb $end
$scope module rla160 $end
$var wire 1 & G $end
$var wire 1 ' P $end
$var wire 16 ( a [15:0] $end
$var wire 16 ) b [15:0] $end
$var wire 1 % cin $end
$var wire 1 * cla41_cout $end
$var wire 16 + sum [15:0] $end
$var wire 1 " cout $end
$var wire 4 , cla43_sum [3:0] $end
$var wire 1 - cla43_cout $end
$var wire 1 . cla43_P $end
$var wire 1 / cla43_G $end
$var wire 4 0 cla42_sum [3:0] $end
$var wire 1 1 cla42_P $end
$var wire 1 2 cla42_G $end
$var wire 4 3 cla41_sum [3:0] $end
$var wire 1 4 cla41_P $end
$var wire 1 5 cla41_G $end
$var wire 4 6 cla40_sum [3:0] $end
$var wire 1 7 cla40_cout $end
$var wire 1 8 cla40_P $end
$var wire 1 9 cla40_G $end
$var wire 4 : c40_p_in [3:0] $end
$var wire 4 ; c40_g_in [3:0] $end
$var wire 4 < c40_c [3:0] $end
$var wire 1 = c40_P $end
$var wire 1 > c40_G $end
$scope module c40 $end
$var wire 1 > G $end
$var wire 1 = P $end
$var wire 1 ? c1 $end
$var wire 1 @ c2 $end
$var wire 1 A c3 $end
$var wire 1 B c4 $end
$var wire 1 % cin $end
$var wire 4 C g [3:0] $end
$var wire 4 D p [3:0] $end
$var wire 4 E c [3:0] $end
$upscope $end
$scope module cla40 $end
$var wire 1 9 G $end
$var wire 1 8 P $end
$var wire 4 F a [3:0] $end
$var wire 4 G b [3:0] $end
$var wire 1 % cin $end
$var wire 4 H sum [3:0] $end
$var wire 4 I gp40_p [3:0] $end
$var wire 4 J gp40_g [3:0] $end
$var wire 1 7 cout $end
$var wire 4 K c40_c [3:0] $end
$var wire 1 L c40_P $end
$var wire 1 M c40_G $end
$scope module c40 $end
$var wire 1 M G $end
$var wire 1 L P $end
$var wire 1 N c1 $end
$var wire 1 O c2 $end
$var wire 1 P c3 $end
$var wire 1 Q c4 $end
$var wire 1 % cin $end
$var wire 4 R p [3:0] $end
$var wire 4 S g [3:0] $end
$var wire 4 T c [3:0] $end
$upscope $end
$scope module gp40 $end
$var wire 4 U a [3:0] $end
$var wire 4 V b [3:0] $end
$var wire 1 W g0 $end
$var wire 1 X g1 $end
$var wire 1 Y g2 $end
$var wire 1 Z g3 $end
$var wire 1 [ p0 $end
$var wire 1 \ p1 $end
$var wire 1 ] p2 $end
$var wire 1 ^ p3 $end
$var wire 4 _ p [3:0] $end
$var wire 4 ` g [3:0] $end
$upscope $end
$upscope $end
$scope module cla41 $end
$var wire 1 5 G $end
$var wire 1 4 P $end
$var wire 4 a a [3:0] $end
$var wire 4 b b [3:0] $end
$var wire 1 c cin $end
$var wire 1 * cout $end
$var wire 4 d sum [3:0] $end
$var wire 4 e gp40_p [3:0] $end
$var wire 4 f gp40_g [3:0] $end
$var wire 4 g c40_c [3:0] $end
$var wire 1 h c40_P $end
$var wire 1 i c40_G $end
$scope module c40 $end
$var wire 1 i G $end
$var wire 1 h P $end
$var wire 1 j c1 $end
$var wire 1 k c2 $end
$var wire 1 l c3 $end
$var wire 1 m c4 $end
$var wire 1 c cin $end
$var wire 4 n p [3:0] $end
$var wire 4 o g [3:0] $end
$var wire 4 p c [3:0] $end
$upscope $end
$scope module gp40 $end
$var wire 4 q a [3:0] $end
$var wire 4 r b [3:0] $end
$var wire 1 s g0 $end
$var wire 1 t g1 $end
$var wire 1 u g2 $end
$var wire 1 v g3 $end
$var wire 1 w p0 $end
$var wire 1 x p1 $end
$var wire 1 y p2 $end
$var wire 1 z p3 $end
$var wire 4 { p [3:0] $end
$var wire 4 | g [3:0] $end
$upscope $end
$upscope $end
$scope module cla42 $end
$var wire 1 2 G $end
$var wire 1 1 P $end
$var wire 4 } a [3:0] $end
$var wire 4 ~ b [3:0] $end
$var wire 1 !" cin $end
$var wire 1 * cout $end
$var wire 4 "" sum [3:0] $end
$var wire 4 #" gp40_p [3:0] $end
$var wire 4 $" gp40_g [3:0] $end
$var wire 4 %" c40_c [3:0] $end
$var wire 1 &" c40_P $end
$var wire 1 '" c40_G $end
$scope module c40 $end
$var wire 1 '" G $end
$var wire 1 &" P $end
$var wire 1 (" c1 $end
$var wire 1 )" c2 $end
$var wire 1 *" c3 $end
$var wire 1 +" c4 $end
$var wire 1 !" cin $end
$var wire 4 ," p [3:0] $end
$var wire 4 -" g [3:0] $end
$var wire 4 ." c [3:0] $end
$upscope $end
$scope module gp40 $end
$var wire 4 /" a [3:0] $end
$var wire 4 0" b [3:0] $end
$var wire 1 1" g0 $end
$var wire 1 2" g1 $end
$var wire 1 3" g2 $end
$var wire 1 4" g3 $end
$var wire 1 5" p0 $end
$var wire 1 6" p1 $end
$var wire 1 7" p2 $end
$var wire 1 8" p3 $end
$var wire 4 9" p [3:0] $end
$var wire 4 :" g [3:0] $end
$upscope $end
$upscope $end
$scope module cla43 $end
$var wire 1 / G $end
$var wire 1 . P $end
$var wire 4 ;" a [3:0] $end
$var wire 4 <" b [3:0] $end
$var wire 1 =" cin $end
$var wire 4 >" sum [3:0] $end
$var wire 4 ?" gp40_p [3:0] $end
$var wire 4 @" gp40_g [3:0] $end
$var wire 1 - cout $end
$var wire 4 A" c40_c [3:0] $end
$var wire 1 B" c40_P $end
$var wire 1 C" c40_G $end
$scope module c40 $end
$var wire 1 C" G $end
$var wire 1 B" P $end
$var wire 1 D" c1 $end
$var wire 1 E" c2 $end
$var wire 1 F" c3 $end
$var wire 1 G" c4 $end
$var wire 1 =" cin $end
$var wire 4 H" p [3:0] $end
$var wire 4 I" g [3:0] $end
$var wire 4 J" c [3:0] $end
$upscope $end
$scope module gp40 $end
$var wire 4 K" a [3:0] $end
$var wire 4 L" b [3:0] $end
$var wire 1 M" g0 $end
$var wire 1 N" g1 $end
$var wire 1 O" g2 $end
$var wire 1 P" g3 $end
$var wire 1 Q" p0 $end
$var wire 1 R" p1 $end
$var wire 1 S" p2 $end
$var wire 1 T" p3 $end
$var wire 4 U" p [3:0] $end
$var wire 4 V" g [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope task verify $end
$var reg 16 W" a_task [15:0] $end
$var reg 16 X" b_task [15:0] $end
$var reg 1 Y" cin_task $end
$var reg 1 Z" cout_task $end
$var reg 16 [" sum_task [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1111 ["
0Z"
0Y"
b1 X"
b1110 W"
b0 V"
b0 U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
b0 L"
b0 K"
b0 J"
b0 I"
b0 H"
0G"
0F"
0E"
0D"
0C"
0B"
b0 A"
b0 @"
b0 ?"
b0 >"
0="
b0 <"
b0 ;"
b0 :"
b0 9"
08"
07"
06"
05"
04"
03"
02"
01"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
0+"
0*"
0)"
0("
0'"
0&"
b0 %"
b0 $"
b0 #"
b0 ""
0!"
b0 ~
b0 }
b0 |
b0 {
0z
0y
0x
0w
0v
0u
0t
0s
b0 r
b0 q
b0 p
b0 o
b0 n
0m
0l
0k
0j
0i
0h
b0 g
b0 f
b0 e
b0 d
0c
b0 b
b0 a
b0 `
b1111 _
1^
1]
1\
1[
0Z
0Y
0X
0W
b1 V
b1110 U
b0 T
b0 S
b1111 R
0Q
0P
0O
0N
0M
1L
b0 K
b0 J
b1111 I
b1111 H
b1 G
b1110 F
b0 E
b1 D
b0 C
0B
0A
0@
0?
0>
0=
b0 <
b0 ;
b1 :
09
18
07
b1111 6
05
04
b0 3
02
01
b0 0
0/
0.
0-
b0 ,
b1111 +
0*
b1 )
b1110 (
0'
0&
0%
b1 $
b1110 #
0"
b1111 !
$end
#1
b1 3
b1 d
1c
b1 <
b1 E
1?
17
1Q
1P
1O
b1 ;
b1 C
19
1M
b1111 K
b1111 T
1N
b0 :
b0 D
08
0L
b10000 !
b10000 +
b0 6
b0 H
b1 J
b1 S
b1 `
1W
b1110 I
b1110 R
b1110 _
0[
b1111 F
b1111 U
b1111 #
b1111 (
b10000 ["
b1111 W"
#2
b1 0
b1 ""
1!"
b11 <
b11 E
1@
x*
1m
1l
1k
b1111 g
b1111 p
1j
b10 :
b10 D
14
1h
b100000000 !
b100000000 +
b0 3
b0 d
1w
1x
1y
b1111 e
b1111 n
b1111 {
1z
b1111 a
b1111 q
b11111111 #
b11111111 (
b100000000 ["
b11111111 W"
#3
b1 ,
b1 >"
1="
b111 <
b111 E
1A
1*
1+"
1*"
1)"
b1111 %"
b1111 ."
1("
b110 :
b110 D
11
1&"
b1000000000000 !
b1000000000000 +
b0 0
b0 ""
15"
16"
17"
b1111 #"
b1111 ,"
b1111 9"
18"
b1111 }
b1111 /"
b111111111111 #
b111111111111 (
b1000000000000 ["
b111111111111 W"
#4
1"
b1111 <
b1111 E
1B
1&
1>
1-
1G"
1F"
1E"
b1111 A"
b1111 J"
1D"
b1110 :
b1110 D
1.
1B"
b0 !
b0 +
b0 ,
b0 >"
1Q"
1R"
1S"
b1111 ?"
b1111 H"
b1111 U"
1T"
b1111 ;"
b1111 K"
b1111111111111111 #
b1111111111111111 (
1Z"
b0 ["
b1111111111111111 W"
#5
