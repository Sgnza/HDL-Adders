$date
	Sun Jan 14 19:56:25 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module carry_lookahead_adder_4_tb $end
$var wire 4 ! sum_tb [3:0] $end
$var wire 1 " cout_tb $end
$var reg 4 # a_tb [3:0] $end
$var reg 4 $ b_tb [3:0] $end
$var reg 1 % cin_tb $end
$scope module rla40 $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum [3:0] $end
$var wire 4 ) gp40_p [3:0] $end
$var wire 4 * gp40_g [3:0] $end
$var wire 1 + gp40_P $end
$var wire 1 , gp40_G $end
$var wire 1 " cout $end
$var wire 4 - c40_c [3:0] $end
$scope module c40 $end
$var wire 1 . c1 $end
$var wire 1 / c2 $end
$var wire 1 0 c3 $end
$var wire 1 1 c4 $end
$var wire 1 % cin $end
$var wire 4 2 p [3:0] $end
$var wire 4 3 g [3:0] $end
$var wire 4 4 c [3:0] $end
$upscope $end
$scope module gp40 $end
$var wire 1 , G $end
$var wire 1 + P $end
$var wire 4 5 a [3:0] $end
$var wire 4 6 b [3:0] $end
$var wire 1 7 g0 $end
$var wire 1 8 g1 $end
$var wire 1 9 g2 $end
$var wire 1 : g3 $end
$var wire 1 ; p0 $end
$var wire 1 < p1 $end
$var wire 1 = p2 $end
$var wire 1 > p3 $end
$var wire 4 ? p [3:0] $end
$var wire 4 @ g [3:0] $end
$upscope $end
$upscope $end
$scope task verify $end
$var reg 4 A a_task [3:0] $end
$var reg 4 B b_task [3:0] $end
$var reg 1 C cin_task $end
$var reg 1 D cout_task $end
$var reg 4 E sum_task [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 E
1D
0C
b1 B
b1111 A
b1 @
b1110 ?
1>
1=
1<
0;
0:
09
08
17
b1 6
b1111 5
b1111 4
b1 3
b1110 2
11
10
1/
1.
b1111 -
1,
0+
b1 *
b1110 )
b0 (
b1 '
b1111 &
0%
b1 $
b1111 #
1"
b0 !
$end
#1
