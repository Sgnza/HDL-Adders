$date
	Sat Jan 13 15:13:57 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ripple_carry_adder_4_tb $end
$var wire 4 ! sum_tb [3:0] $end
$var wire 1 " cout_tb $end
$var reg 4 # a_tb [3:0] $end
$var reg 4 $ b_tb [3:0] $end
$var reg 1 % cin_tb $end
$scope module rca0 $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 1 " cout $end
$var wire 4 ( sum [3:0] $end
$var wire 1 ) fa3_sum $end
$var wire 1 * fa3_cout $end
$var wire 1 + fa2_sum $end
$var wire 1 , fa2_cout $end
$var wire 1 - fa1_sum $end
$var wire 1 . fa1_cout $end
$var wire 1 / fa0_sum $end
$var wire 1 0 fa0_cout $end
$scope module fa0 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 % cin $end
$var wire 1 0 cout $end
$var wire 1 / sum $end
$var wire 1 3 ha1_cout $end
$var wire 1 4 ha0_sum $end
$var wire 1 5 ha0_cout $end
$scope module ha0 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 4 sum $end
$var wire 1 5 cout $end
$upscope $end
$scope module hf1 $end
$var wire 1 % a $end
$var wire 1 4 b $end
$var wire 1 / sum $end
$var wire 1 3 cout $end
$upscope $end
$upscope $end
$scope module fa1 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 0 cin $end
$var wire 1 . cout $end
$var wire 1 - sum $end
$var wire 1 8 ha1_cout $end
$var wire 1 9 ha0_sum $end
$var wire 1 : ha0_cout $end
$scope module ha0 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 9 sum $end
$var wire 1 : cout $end
$upscope $end
$scope module hf1 $end
$var wire 1 0 a $end
$var wire 1 9 b $end
$var wire 1 - sum $end
$var wire 1 8 cout $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 . cin $end
$var wire 1 , cout $end
$var wire 1 + sum $end
$var wire 1 = ha1_cout $end
$var wire 1 > ha0_sum $end
$var wire 1 ? ha0_cout $end
$scope module ha0 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 > sum $end
$var wire 1 ? cout $end
$upscope $end
$scope module hf1 $end
$var wire 1 . a $end
$var wire 1 > b $end
$var wire 1 + sum $end
$var wire 1 = cout $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 , cin $end
$var wire 1 * cout $end
$var wire 1 ) sum $end
$var wire 1 B ha1_cout $end
$var wire 1 C ha0_sum $end
$var wire 1 D ha0_cout $end
$scope module ha0 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 C sum $end
$var wire 1 D cout $end
$upscope $end
$scope module hf1 $end
$var wire 1 , a $end
$var wire 1 C b $end
$var wire 1 ) sum $end
$var wire 1 B cout $end
$upscope $end
$upscope $end
$upscope $end
$scope task verify $end
$var reg 4 E a_task [3:0] $end
$var reg 4 F b_task [3:0] $end
$var reg 1 G cin_task $end
$var reg 1 H cout_task $end
$var reg 4 I sum_task [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 I
1H
0G
b1 F
b1111 E
0D
1C
1B
0A
1@
0?
1>
1=
0<
1;
0:
19
18
07
16
15
04
03
12
11
10
0/
1.
0-
1,
0+
1*
0)
b0 (
b1 '
b1111 &
0%
b1 $
b1111 #
1"
b0 !
$end
#1
