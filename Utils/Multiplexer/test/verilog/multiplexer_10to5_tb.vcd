$date
	Thu Jan 18 16:38:12 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module multiplexer_10to5_tb $end
$var wire 5 ! channel_out_tb [4:0] $end
$var reg 5 " in0_tb [4:0] $end
$var reg 5 # in1_tb [4:0] $end
$var reg 1 $ select_tb $end
$scope module m0 $end
$var wire 5 % in0 [4:0] $end
$var wire 5 & in1 [4:0] $end
$var wire 1 $ select $end
$var wire 5 ' channel_out [4:0] $end
$scope module m0 $end
$var wire 1 ( channel_out $end
$var wire 1 ) in0 $end
$var wire 1 * in1 $end
$var wire 1 $ select $end
$var wire 1 + og0_result $end
$var wire 1 , ng0_result $end
$var wire 1 - ag1_result $end
$var wire 1 . ag0_result $end
$scope module ag0 $end
$var wire 1 ) a $end
$var wire 1 . result $end
$var wire 1 , b $end
$upscope $end
$scope module ag1 $end
$var wire 1 * a $end
$var wire 1 $ b $end
$var wire 1 - result $end
$upscope $end
$scope module ng0 $end
$var wire 1 $ a $end
$var wire 1 , result $end
$upscope $end
$scope module og0 $end
$var wire 1 . a $end
$var wire 1 - b $end
$var wire 1 + result $end
$upscope $end
$upscope $end
$scope module m1 $end
$var wire 1 / channel_out $end
$var wire 1 0 in0 $end
$var wire 1 1 in1 $end
$var wire 1 $ select $end
$var wire 1 2 og0_result $end
$var wire 1 3 ng0_result $end
$var wire 1 4 ag1_result $end
$var wire 1 5 ag0_result $end
$scope module ag0 $end
$var wire 1 0 a $end
$var wire 1 5 result $end
$var wire 1 3 b $end
$upscope $end
$scope module ag1 $end
$var wire 1 1 a $end
$var wire 1 $ b $end
$var wire 1 4 result $end
$upscope $end
$scope module ng0 $end
$var wire 1 $ a $end
$var wire 1 3 result $end
$upscope $end
$scope module og0 $end
$var wire 1 5 a $end
$var wire 1 4 b $end
$var wire 1 2 result $end
$upscope $end
$upscope $end
$scope module m2 $end
$var wire 1 6 channel_out $end
$var wire 1 7 in0 $end
$var wire 1 8 in1 $end
$var wire 1 $ select $end
$var wire 1 9 og0_result $end
$var wire 1 : ng0_result $end
$var wire 1 ; ag1_result $end
$var wire 1 < ag0_result $end
$scope module ag0 $end
$var wire 1 7 a $end
$var wire 1 < result $end
$var wire 1 : b $end
$upscope $end
$scope module ag1 $end
$var wire 1 8 a $end
$var wire 1 $ b $end
$var wire 1 ; result $end
$upscope $end
$scope module ng0 $end
$var wire 1 $ a $end
$var wire 1 : result $end
$upscope $end
$scope module og0 $end
$var wire 1 < a $end
$var wire 1 ; b $end
$var wire 1 9 result $end
$upscope $end
$upscope $end
$scope module m3 $end
$var wire 1 = channel_out $end
$var wire 1 > in0 $end
$var wire 1 ? in1 $end
$var wire 1 $ select $end
$var wire 1 @ og0_result $end
$var wire 1 A ng0_result $end
$var wire 1 B ag1_result $end
$var wire 1 C ag0_result $end
$scope module ag0 $end
$var wire 1 > a $end
$var wire 1 C result $end
$var wire 1 A b $end
$upscope $end
$scope module ag1 $end
$var wire 1 ? a $end
$var wire 1 $ b $end
$var wire 1 B result $end
$upscope $end
$scope module ng0 $end
$var wire 1 $ a $end
$var wire 1 A result $end
$upscope $end
$scope module og0 $end
$var wire 1 C a $end
$var wire 1 B b $end
$var wire 1 @ result $end
$upscope $end
$upscope $end
$scope module m4 $end
$var wire 1 D channel_out $end
$var wire 1 E in0 $end
$var wire 1 F in1 $end
$var wire 1 $ select $end
$var wire 1 G og0_result $end
$var wire 1 H ng0_result $end
$var wire 1 I ag1_result $end
$var wire 1 J ag0_result $end
$scope module ag0 $end
$var wire 1 E a $end
$var wire 1 J result $end
$var wire 1 H b $end
$upscope $end
$scope module ag1 $end
$var wire 1 F a $end
$var wire 1 $ b $end
$var wire 1 I result $end
$upscope $end
$scope module ng0 $end
$var wire 1 $ a $end
$var wire 1 H result $end
$upscope $end
$scope module og0 $end
$var wire 1 J a $end
$var wire 1 I b $end
$var wire 1 G result $end
$upscope $end
$upscope $end
$upscope $end
$scope task verify $end
$var reg 5 K channel_out_task [4:0] $end
$var reg 5 L in0_task [4:0] $end
$var reg 5 M in1_task [4:0] $end
$var reg 1 N select_task $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0N
b1100 M
b10011 L
b10011 K
1J
0I
1H
1G
0F
1E
1D
0C
0B
1A
0@
1?
0>
0=
0<
0;
1:
09
18
07
06
15
04
13
12
01
10
1/
1.
0-
1,
1+
0*
1)
1(
b10011 '
b1100 &
b10011 %
0$
b1100 #
b10011 "
b10011 !
$end
#1
0/
02
b1 !
b1 '
0D
0G
0.
05
0J
1-
0,
03
0:
0A
0H
1*
08
0?
17
1>
1$
b1 #
b1 &
b11111 "
b11111 %
b1 K
1N
b1 M
b11111 L
#2
