$date
	Sun Jan 21 15:28:59 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ripple_carry_adder_8_tb $end
$var wire 8 ! sum_tb [7:0] $end
$var wire 1 " cout_tb $end
$var reg 8 # a_tb [7:0] $end
$var reg 8 $ b_tb [7:0] $end
$var reg 1 % cin_tb $end
$scope module rca0 $end
$var wire 8 & a [7:0] $end
$var wire 8 ' b [7:0] $end
$var wire 1 % cin $end
$var wire 1 " cout $end
$var wire 8 ( sum [7:0] $end
$var wire 4 ) rca41_sum [3:0] $end
$var wire 1 * rca41_cout $end
$var wire 4 + rca40_sum [3:0] $end
$var wire 1 , rca40_cout $end
$scope module rca40 $end
$var wire 4 - a [3:0] $end
$var wire 4 . b [3:0] $end
$var wire 1 % cin $end
$var wire 1 , cout $end
$var wire 4 / sum [3:0] $end
$var wire 1 0 fa3_sum $end
$var wire 1 1 fa3_cout $end
$var wire 1 2 fa2_sum $end
$var wire 1 3 fa2_cout $end
$var wire 1 4 fa1_sum $end
$var wire 1 5 fa1_cout $end
$var wire 1 6 fa0_sum $end
$var wire 1 7 fa0_cout $end
$scope module fa0 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 % cin $end
$var wire 1 7 cout $end
$var wire 1 6 sum $end
$var wire 1 : ha1_cout $end
$var wire 1 ; ha0_sum $end
$var wire 1 < ha0_cout $end
$scope module ha0 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 ; sum $end
$var wire 1 < cout $end
$upscope $end
$scope module hf1 $end
$var wire 1 % a $end
$var wire 1 ; b $end
$var wire 1 6 sum $end
$var wire 1 : cout $end
$upscope $end
$upscope $end
$scope module fa1 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 7 cin $end
$var wire 1 5 cout $end
$var wire 1 4 sum $end
$var wire 1 ? ha1_cout $end
$var wire 1 @ ha0_sum $end
$var wire 1 A ha0_cout $end
$scope module ha0 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 @ sum $end
$var wire 1 A cout $end
$upscope $end
$scope module hf1 $end
$var wire 1 7 a $end
$var wire 1 @ b $end
$var wire 1 4 sum $end
$var wire 1 ? cout $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 5 cin $end
$var wire 1 3 cout $end
$var wire 1 2 sum $end
$var wire 1 D ha1_cout $end
$var wire 1 E ha0_sum $end
$var wire 1 F ha0_cout $end
$scope module ha0 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 E sum $end
$var wire 1 F cout $end
$upscope $end
$scope module hf1 $end
$var wire 1 5 a $end
$var wire 1 E b $end
$var wire 1 2 sum $end
$var wire 1 D cout $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 1 G a $end
$var wire 1 H b $end
$var wire 1 3 cin $end
$var wire 1 1 cout $end
$var wire 1 0 sum $end
$var wire 1 I ha1_cout $end
$var wire 1 J ha0_sum $end
$var wire 1 K ha0_cout $end
$scope module ha0 $end
$var wire 1 G a $end
$var wire 1 H b $end
$var wire 1 J sum $end
$var wire 1 K cout $end
$upscope $end
$scope module hf1 $end
$var wire 1 3 a $end
$var wire 1 J b $end
$var wire 1 0 sum $end
$var wire 1 I cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module rca41 $end
$var wire 4 L a [3:0] $end
$var wire 4 M b [3:0] $end
$var wire 1 , cin $end
$var wire 1 * cout $end
$var wire 4 N sum [3:0] $end
$var wire 1 O fa3_sum $end
$var wire 1 P fa3_cout $end
$var wire 1 Q fa2_sum $end
$var wire 1 R fa2_cout $end
$var wire 1 S fa1_sum $end
$var wire 1 T fa1_cout $end
$var wire 1 U fa0_sum $end
$var wire 1 V fa0_cout $end
$scope module fa0 $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 , cin $end
$var wire 1 V cout $end
$var wire 1 U sum $end
$var wire 1 Y ha1_cout $end
$var wire 1 Z ha0_sum $end
$var wire 1 [ ha0_cout $end
$scope module ha0 $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 Z sum $end
$var wire 1 [ cout $end
$upscope $end
$scope module hf1 $end
$var wire 1 , a $end
$var wire 1 Z b $end
$var wire 1 U sum $end
$var wire 1 Y cout $end
$upscope $end
$upscope $end
$scope module fa1 $end
$var wire 1 \ a $end
$var wire 1 ] b $end
$var wire 1 V cin $end
$var wire 1 T cout $end
$var wire 1 S sum $end
$var wire 1 ^ ha1_cout $end
$var wire 1 _ ha0_sum $end
$var wire 1 ` ha0_cout $end
$scope module ha0 $end
$var wire 1 \ a $end
$var wire 1 ] b $end
$var wire 1 _ sum $end
$var wire 1 ` cout $end
$upscope $end
$scope module hf1 $end
$var wire 1 V a $end
$var wire 1 _ b $end
$var wire 1 S sum $end
$var wire 1 ^ cout $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 1 a a $end
$var wire 1 b b $end
$var wire 1 T cin $end
$var wire 1 R cout $end
$var wire 1 Q sum $end
$var wire 1 c ha1_cout $end
$var wire 1 d ha0_sum $end
$var wire 1 e ha0_cout $end
$scope module ha0 $end
$var wire 1 a a $end
$var wire 1 b b $end
$var wire 1 d sum $end
$var wire 1 e cout $end
$upscope $end
$scope module hf1 $end
$var wire 1 T a $end
$var wire 1 d b $end
$var wire 1 Q sum $end
$var wire 1 c cout $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 R cin $end
$var wire 1 P cout $end
$var wire 1 O sum $end
$var wire 1 h ha1_cout $end
$var wire 1 i ha0_sum $end
$var wire 1 j ha0_cout $end
$scope module ha0 $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 i sum $end
$var wire 1 j cout $end
$upscope $end
$scope module hf1 $end
$var wire 1 R a $end
$var wire 1 i b $end
$var wire 1 O sum $end
$var wire 1 h cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope task verify $end
$var reg 8 k a_task [7:0] $end
$var reg 8 l b_task [7:0] $end
$var reg 1 m cin_task $end
$var reg 1 n cout_task $end
$var reg 8 o sum_task [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 o
1n
0m
b1 l
b11111111 k
0j
1i
1h
0g
1f
0e
1d
1c
0b
1a
0`
1_
1^
0]
1\
0[
1Z
1Y
0X
1W
1V
0U
1T
0S
1R
0Q
1P
0O
b0 N
b0 M
b1111 L
0K
1J
1I
0H
1G
0F
1E
1D
0C
1B
0A
1@
1?
0>
1=
1<
0;
0:
19
18
17
06
15
04
13
02
11
00
b0 /
b1 .
b1111 -
1,
b0 +
1*
b0 )
b0 (
b1 '
b11111111 &
0%
b1 $
b11111111 #
1"
b0 !
$end
#1
